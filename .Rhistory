source("R/helper.Rmd")
source("R/helper.R")
source("R/helpers.R")
saveRDS(file, "final.RDS")
readRDS(file, "final.RDS")
new = readRDS("final.RDS")
file = 2
saveRDS(file, "final.RDS")
new = readRDS("final.RDS")
new
source("R/helpers.R")
new = readRDS("final.RDS")
file = 2
saveRDS(file, "final.RDS")
Daniel = 1
dataset = read.csv("data/games.csv")
View(dataset)
class(dataset)
dataset[[0]]
dataset[0]
dataset[1]
dataset[[1]]
dataset[[1, 1]]
dataset[[2]]
dataset[[3]]
dataset[[3]] %>%
class()
library(magrittr)
dataset[[3]] %>% class()
videoset = read.csv("data/Video_Games_Sales_as_at_22_Dec_2016.csv")
View(videoset)
View(dataset)
saveRDS(videoset, "final.RDS")
new = readRDS("final.RDS")
new
dataset = readRDS("final.RDS")
View(dataset)
library(magrittr)
source("R/helpers.R")
dataset %>% class()
View(dataset)
View(dataset)
name(dataset)
print(ncol(dataset))
dataset[,1]
dataset[[1]]
dataset[[1, 2], [1, 2]]
dataset[[1, 2]]
dataset[[1, 2], [2, 3]]
dataframe[2, i] %>% class()
dataset[2, i] %>% class()
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class()
}
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class()
}
dataset[2, i] %>% class() %>% print()
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class() %>% print()
}
View(dataset)
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class() -> tmp
sprintf("%s with type : %s", dataset[1, i], tmp)
}
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class() -> tmp
sprintf("%s with type : %s", dataset[1, i], tmp)
}
sprintf("%s with type : %s", dataset[1, i], tmp)
sprintf("with type : %s", tmp)
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class() -> tmp
sprintf("with type : %s", tmp)
}
sprintf("with type : %s", tmp)
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class() -> tmp
sprintf("with type : %s", tmp)
}
sprintf("with type : %s", tmp)
{
sprintf("with type : %s", dataset[2, i] %>% class())
}
for(i in 1:ncol(dataset))
{
sprintf("with type : %s", dataset[2, i] %>% class())
}
dataset[2, i] %>% class()
sprintf("with type : %s", tmp)
for(i in 1:ncol(dataset))
{
dataset[2, i] %>% class() -> tmp
sprintf("with type : %s", tmp)
}
str(dataset)
# change column 3 into "date" type
library(lubridate)
lubridate::ymd("2020")
lubridate::ymd("2020") -> testdate
print(testdate)
saveRDS(dataset, "final.RDS")
dataset = readRDS("final.RDS")
View(dataset)
View(dataset)
# change column 13 into numeric type
dataset::[1, 2]
# change column 13 into numeric type
dataset[1, 2]
# change column 13 into numeric type
dataset[1, 3]
# change column 13 into numeric type
dataset[1, ]
# change column 13 into numeric type
dataset[,13]
# change column 13 into numeric type
as.numeric(dataset[,13])
# change column 13 into numeric type
as.numeric(dataset[,13]) -> dataset[,13]
# check every column's type
str(dataset)
as.integer(dataset[,3])
as.integer(dataset[,3]) -> dataset[,2]
# check every column's type
str(dataset)
dataset = read.csv("data/Video_Games_Sales_as_at_22_Dec_2016.csv")
source("R/helpers.R")
library(magrittr)
#dataset = read.csv("data/games.csv")
#View(dataset)
dataset = read.csv("data/Video_Games_Sales_as_at_22_Dec_2016.csv")
View(dataset)
dataset %>% class()
print(ncol(dataset))
# check every column's type
str(dataset)
# change column 3 into "date" type, but now I change to integer first
library(lubridate)
as.integer(dataset[,3]) -> dataset[,2]
# change column 13 into numeric type
as.numeric(dataset[,13]) -> dataset[,13]
dataset = readRDS("final.RDS")
View(dataset)
saveRDS(dataset, "final.RDS")
Daniel = 1
source("R/helpers.R")
library(magrittr)
#dataset = read.csv("data/games.csv")
#View(dataset)
dataset = read.csv("data/Video_Games_Sales_as_at_22_Dec_2016.csv")
View(dataset)
dataset %>% class()
print(ncol(dataset))
# check every column's type
str(dataset)
# change column 3 into "date" type, but now I change to integer first
library(lubridate)
as.integer(dataset[,3]) -> dataset[,3]
# change column 13 into numeric type
as.numeric(dataset[,13]) -> dataset[,13]
dataset = readRDS("final.RDS")
View(dataset)
saveRDS(dataset, "final.RDS")
Daniel = 1
# check every column's type
str(dataset)
as.integer(dataset[,3]) -> dataset[,3]
# change column 13 into numeric type
as.numeric(dataset[,13]) -> dataset[,13]
# check every column's type
str(dataset)
grouped_df = group_df(dataset, Platform)
library(dplyr)
grouped_df = group_df(dataset, Platform)
grouped_df = group_by(dataset, Platform)
View(grouped_df)
grouped_df
grouped_df = group_by(dataset, Platform)
grouped_df
grouped_df = group_by(dataset, Year_of_Release)
grouped_df
grouped_df = group_by(dataset, "Platform")
grouped_df
grouped_df = group_by(dataset, Platform)
grouped_df
grouped_df %>% summarise(grouped_df)
sorted_df <- grouped_df[order(grouped_df$Platform), ]
sorted_df
grouped_df = group_by(dataset, Platform)
View(dataset)
View(dataset)
# check every column's type
str(dataset)
# 因為只有給年，所以就直接在後面塞一個統一日月
dataset$Year_of_Release <- as.Date(paste0(dataset$Year_of_Release, "-01-01"))
# check every column's type
str(dataset)
lubridate::ymd(dataset$Year_of_Release) -> dataset$Year_of_Release
# check every column's type
str(dataset)
dataset[1, 3]
dataset[1, 3]
dataset[1, 3] %>% class()
library(magrittr)
library(dplyr)
dataset[1, 3] %>% class()
View(dataset)
sorted_df
grouped_df = group_by(dataset, Platform)
grouped_df = group_by(dataset, Platform)
sorted_df <- grouped_df[order(grouped_df$Platform), ]
View(sorted)
View(sorted_df)
GroupByPlatForm = group_by(dataset, Platform)
GroupByPlatForm
GroupByPlatForm %>% group_keys()
GroupByPlatForm %>% tally()
GroupByPlatForm %>% summarise(
Global_TotalSales = sum(Global_Sales),
NA_TotalSales = sum(NA_Sales),
JP_TotalSales = sum(JP_Sales),
EU_TotalSales = sum(EU_Sales),
Other_TotalSales = sum(Other_Sales),
Avg_Score = mean(Critic_Score)
) -> summary_GroupByPlatForm
summary_GroupByPlatForm
summary_GroupByPlatForm[order(summary_GroupByPlatForm$Global_TotalSales),]
summary_GroupByPlatForm[order(summary_GroupByPlatForm$Global_TotalSales),] %>% View()
GroupByPlatForm %>% summarise(
Global_TotalSales = sum(Global_Sales),
NA_TotalSales = sum(NA_Sales),
JP_TotalSales = sum(JP_Sales),
EU_TotalSales = sum(EU_Sales),
Other_TotalSales = sum(Other_Sales),
Avg_Score = mean(Critic_Score, na.rm = T)
) -> summary_GroupByPlatForm
summary_GroupByPlatForm[order(summary_GroupByPlatForm$Global_TotalSales),] %>% View()
summary_GroupByPlatForm[order(summary_GroupByPlatForm$Global_TotalSales),] %>% View()
GroupByPlatForm %>% summarise(
Global_TotalSales = sum(Global_Sales),
NA_TotalSales = sum(NA_Sales),
JP_TotalSales = sum(JP_Sales),
EU_TotalSales = sum(EU_Sales),
Other_TotalSales = sum(Other_Sales),
Avg_Score = mean(Critic_Score, na.rm = T),
Avg_User_Score = mean(User_Score, na.rm = T),
TotalUserCount = sum(User_Count)
) -> summary_GroupByPlatForm
summary_GroupByPlatForm[order(summary_GroupByPlatForm$Global_TotalSales),] %>% View()
GroupByPlatForm %>% summarise(
Global_TotalSales = sum(Global_Sales),
NA_TotalSales = sum(NA_Sales),
JP_TotalSales = sum(JP_Sales),
EU_TotalSales = sum(EU_Sales),
Other_TotalSales = sum(Other_Sales),
Avg_Score = mean(Critic_Score, na.rm = T),
Avg_User_Score = mean(User_Score, na.rm = T),
TotalUserCount = sum(User_Count, na.rm = T)
) -> summary_GroupByPlatForm
summary_GroupByPlatForm[order(summary_GroupByPlatForm$Global_TotalSales),] %>% View()
saveRDS(GroupByPlatForm, "final_GroupByPlatForm.RDS")
saveRDS(GroupByPlatForm, "RDSFile/final_GroupByPlatForm.RDS")
saveRDS(dataset, "RDSFile/final_dataset.RDS")
dataset = readRDS("RDSFile/final_dataset.RDS")
View(dataset)
str(dataset)
str(dataset)
View(dataset)
View(dataset)
GroupByYear = group_by(dataset, Year_of_Release)
GroupByYear %>% summarise(
TotalSales = sum(Global_Sales, na.rm = T)
)
GroupByYear %>% summarise(
TotalSales = sum(Global_Sales, na.rm = T),
Avg_CriticScore = mean(Critic_Count, na.rm = T)
)
View(dataset)
GroupByPlatForm %>% summarise(
Global_TotalSales = sum(Global_Sales),
NA_TotalSales = sum(NA_Sales),
JP_TotalSales = sum(JP_Sales),
EU_TotalSales = sum(EU_Sales),
Other_TotalSales = sum(Other_Sales),
Avg_Score = mean(Critic_Score, na.rm = T),
Avg_User_Score = mean(User_Score, na.rm = T),
TotalUserCount = sum(User_Count, na.rm = T)
) -> summary_GroupByPlatForm
library(magrittr)
dataset = readRDS("RDSFile/final_dataset.RDS")
GroupByYear = group_by(dataset, Year_of_Release)
library(dplyr)
source("R/helpers.R")
source("R/helpers.R")
dataset = readRDS("RDSFile/final_dataset.RDS")
GroupByYear %>% summarise(
TotalSales = sum(Global_Sales, na.rm = T),
Na_TotalSales = sum(NA_Sales, na.rm = T),
Jp_TotalSales = sum(JP_Sales, na.rm = T),
Eu_TotalSales = sum(EU_Sales, na.rm = T),
Other_TotalSales = sum(Other_Sales, na.rm = T),
Avg_CriticScore = mean(Critic_Count, na.rm = T),
Avg_UserScore = mean(User_Count, na.rm = T)
) -> summary_GroupByYear
GroupByYear = group_by(dataset, Year_of_Release)
GroupByYear %>% summarise(
TotalSales = sum(Global_Sales, na.rm = T),
Na_TotalSales = sum(NA_Sales, na.rm = T),
Jp_TotalSales = sum(JP_Sales, na.rm = T),
Eu_TotalSales = sum(EU_Sales, na.rm = T),
Other_TotalSales = sum(Other_Sales, na.rm = T),
Avg_CriticScore = mean(Critic_Count, na.rm = T),
Avg_UserScore = mean(User_Count, na.rm = T)
) -> summary_GroupByYear
source("R/helpers.R")
source("R/helpers.R")
GroupByYear = group_by(dataset, Year_of_Release)
GroupByYear %>% summarise(
TotalSales = sum(Global_Sales, na.rm = T),
Na_TotalSales = sum(NA_Sales, na.rm = T),
Jp_TotalSales = sum(JP_Sales, na.rm = T),
Eu_TotalSales = sum(EU_Sales, na.rm = T),
Other_TotalSales = sum(Other_Sales, na.rm = T),
Avg_CriticScore = mean(Critic_Count, na.rm = T),
Avg_UserScore = mean(User_Count, na.rm = T)
) -> summary_GroupByYear
summary_GroupByYear
summary_GroupByYear %>% View()
GroupByYear = group_by(dataset, Year_of_Release)
GroupByYear %>% summarise(
TotalSales = sum(Global_Sales, na.rm = T),
Na_TotalSales = sum(NA_Sales, na.rm = T),
Jp_TotalSales = sum(JP_Sales, na.rm = T),
Eu_TotalSales = sum(EU_Sales, na.rm = T),
Other_TotalSales = sum(Other_Sales, na.rm = T),
Avg_CriticScore = mean(Critic_Score, na.rm = T),
Avg_UserScore = mean(User_Score, na.rm = T)
) -> summary_GroupByYear
summary_GroupByYear %>% View()
which.max(dataset$Year_of_Release)
dataset[which.max(dataset$Year_of_Release), 3]
max(dataset$Year_of_Release)
max(dataset$Year_of_Release)]
max(dataset$Year_of_Release)
max(dataset$Year_of_Release, na.rm=T)
dataset %>% grep("2018-01-01", dataset$Year_of_Release)
dataset %>% grep("2020-01-01", dataset$Year_of_Release)
dataset %>% grepl("2020-01-01", dataset$Year_of_Release)
grepl("2020-01-01", dataset$Year_of_Release)
dataset[matchingrow, ]
grepl("2020-01-01", dataset$Year_of_Release) -> matching_row
dataset[matchingrow, ]
dataset[matching_row, ]
grepl("2018-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
grepl("2019-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
grepl("2017-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
grepl("2016-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
grepl("2019-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
grepl("2017-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
dataset[matching_row, ]
grepl("2017-01-01", dataset$Year_of_Release) -> matching_row
dataset[matching_row, ]
dataset2 = read.csv("data/games.csv")
View(dataset2)
